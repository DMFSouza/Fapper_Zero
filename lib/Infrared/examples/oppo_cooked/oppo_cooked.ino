// This Arduino sketch was automatically generated by IrScrutinizer.

// It supports:
//
// * Infrared4Arduino https://github.com/bengtmartensson/Infrared4Arduino,
//                    http://www.harctoolbox.org/Infrared4Arduino.html (planned)

// For problems, bugs, and suggestions, please open an issue at
// https://github.com/bengtmartensson/harctoolboxbundle/issues

// This file contains C identifiers which have been translated from command names.

#include <IrSenderPwm.h>
#include <Nec1Renderer.h>

// Constants
static const long BAUD = 115200UL; // Change if desired

IrSender *irsend = IrSenderPwm::getInstance(true);

// Command #1: power_toggle
// Protocol: nec1, Parameters: D=73U F=26U

// Command #2: open_close
// Protocol: nec1, Parameters: D=73U F=27U

// Command #3: setup
// Protocol: nec1, Parameters: D=73U F=0U

// Command #4: power_on
// Protocol: nec1, Parameters: D=73U F=90U

// Command #5: power_off
// Protocol: nec1, Parameters: D=73U F=91U

// Command #6: source
// Protocol: nec1, Parameters: D=73U F=17U

// Command #7: play
// Protocol: nec1, Parameters: D=73U F=86U

// Command #8: pause_toggle
// Protocol: nec1, Parameters: D=73U F=20U

// Command #9: stop
// Protocol: nec1, Parameters: D=73U F=82U

// Command #10: rewind
// Protocol: nec1, Parameters: D=73U F=85U

// Command #11: fast_forward
// Protocol: nec1, Parameters: D=73U F=81U

// Command #12: next
// Protocol: nec1, Parameters: D=73U F=80U

// Command #13: previous
// Protocol: nec1, Parameters: D=73U F=84U

// Command #14: a_b
// Protocol: nec1, Parameters: D=73U F=77U

// Command #15: repeat
// Protocol: nec1, Parameters: D=73U F=76U

// Command #16: title
// Protocol: nec1, Parameters: D=73U F=72U

// Command #17: menu
// Protocol: nec1, Parameters: D=73U F=64U

// Command #18: cmd_goto
// Protocol: nec1, Parameters: D=73U F=74U

// Command #19: cmd_return
// Protocol: nec1, Parameters: D=73U F=66U

// Command #20: cmd_0
// Protocol: nec1, Parameters: D=73U F=4U

// Command #21: cmd_1
// Protocol: nec1, Parameters: D=73U F=11U

// Command #22: cmd_2
// Protocol: nec1, Parameters: D=73U F=7U

// Command #23: cmd_3
// Protocol: nec1, Parameters: D=73U F=3U

// Command #24: cmd_4
// Protocol: nec1, Parameters: D=73U F=10U

// Command #25: cmd_5
// Protocol: nec1, Parameters: D=73U F=6U

// Command #26: cmd_6
// Protocol: nec1, Parameters: D=73U F=2U

// Command #27: cmd_7
// Protocol: nec1, Parameters: D=73U F=9U

// Command #28: cmd_8
// Protocol: nec1, Parameters: D=73U F=5U

// Command #29: cmd_9
// Protocol: nec1, Parameters: D=73U F=1U

// Command #30: cancel
// Protocol: nec1, Parameters: D=73U F=70U

// Command #31: up
// Protocol: nec1, Parameters: D=73U F=24U

// Command #32: down
// Protocol: nec1, Parameters: D=73U F=16U

// Command #33: left
// Protocol: nec1, Parameters: D=73U F=87U

// Command #34: right
// Protocol: nec1, Parameters: D=73U F=79U

// Command #35: ok
// Protocol: nec1, Parameters: D=73U F=83U

// Command #36: red
// Protocol: nec1, Parameters: D=73U F=28U

// Command #37: green
// Protocol: nec1, Parameters: D=73U F=29U

// Command #38: blue
// Protocol: nec1, Parameters: D=73U F=31U

// Command #39: yellow
// Protocol: nec1, Parameters: D=73U F=30U

// Command #40: subtitle
// Protocol: nec1, Parameters: D=73U F=75U

// Command #41: audio
// Protocol: nec1, Parameters: D=73U F=71U

// Command #42: angle
// Protocol: nec1, Parameters: D=73U F=73U

// Command #43: zoom
// Protocol: nec1, Parameters: D=73U F=69U

// Command #44: SAP
// Protocol: nec1, Parameters: D=73U F=18U

// Command #45: PIP
// Protocol: nec1, Parameters: D=73U F=12U

// Command #46: osd
// Protocol: nec1, Parameters: D=73U F=68U

// Command #47: home
// Protocol: nec1, Parameters: D=73U F=92U

// Command #48: dimmer
// Protocol: nec1, Parameters: D=73U F=95U

// Command #49: light_on
// Protocol: nec1, Parameters: D=73U F=25U

// Command #50: page_up
// Protocol: nec1, Parameters: D=73U F=94U

// Command #51: page_down
// Protocol: nec1, Parameters: D=73U F=93U

// Command #52: volume_up
// Protocol: nec1, Parameters: D=73U F=19U

// Command #53: volume_down
// Protocol: nec1, Parameters: D=73U F=23U

// Command #54: mute_toggle
// Protocol: nec1, Parameters: D=73U F=67U

// Command #55: audio_only
// Protocol: nec1, Parameters: D=73U F=65U

// Command #56: pal_ntsc
// Protocol: nec1, Parameters: D=73U F=22U

// Command #57: resolution
// Protocol: nec1, Parameters: D=73U F=21U

static void sendNec1(unsigned D, unsigned S, unsigned F, unsigned times) {
    const IrSignal *irSignal = Nec1Renderer::newIrSignal(D, S, F);
    irsend->sendIrSignal(*irSignal, times);
    delete irSignal;
}

void setup() {
    Serial.begin(BAUD);
    Serial.setTimeout(60000UL);
}

// A pretty silly main loop; feel free to replace it by something smarter.
void loop() {
    Serial.println(F("Enter number of signal to send (1 .. 57)"));
    long commandno = Serial.parseInt();
    Serial.println(F("Enter number of times to send it"));
    long times = Serial.parseInt();
    switch (commandno) {
    case 1L:
        sendNec1(73U, 182U, 26U, times);
        break;
    case 2L:
        sendNec1(73U, 182U, 27U, times);
        break;
    case 3L:
        sendNec1(73U, 182U, 0U, times);
        break;
    case 4L:
        sendNec1(73U, 182U, 90U, times);
        break;
    case 5L:
        sendNec1(73U, 182U, 91U, times);
        break;
    case 6L:
        sendNec1(73U, 182U, 17U, times);
        break;
    case 7L:
        sendNec1(73U, 182U, 86U, times);
        break;
    case 8L:
        sendNec1(73U, 182U, 20U, times);
        break;
    case 9L:
        sendNec1(73U, 182U, 82U, times);
        break;
    case 10L:
        sendNec1(73U, 182U, 85U, times);
        break;
    case 11L:
        sendNec1(73U, 182U, 81U, times);
        break;
    case 12L:
        sendNec1(73U, 182U, 80U, times);
        break;
    case 13L:
        sendNec1(73U, 182U, 84U, times);
        break;
    case 14L:
        sendNec1(73U, 182U, 77U, times);
        break;
    case 15L:
        sendNec1(73U, 182U, 76U, times);
        break;
    case 16L:
        sendNec1(73U, 182U, 72U, times);
        break;
    case 17L:
        sendNec1(73U, 182U, 64U, times);
        break;
    case 18L:
        sendNec1(73U, 182U, 74U, times);
        break;
    case 19L:
        sendNec1(73U, 182U, 66U, times);
        break;
    case 20L:
        sendNec1(73U, 182U, 4U, times);
        break;
    case 21L:
        sendNec1(73U, 182U, 11U, times);
        break;
    case 22L:
        sendNec1(73U, 182U, 7U, times);
        break;
    case 23L:
        sendNec1(73U, 182U, 3U, times);
        break;
    case 24L:
        sendNec1(73U, 182U, 10U, times);
        break;
    case 25L:
        sendNec1(73U, 182U, 6U, times);
        break;
    case 26L:
        sendNec1(73U, 182U, 2U, times);
        break;
    case 27L:
        sendNec1(73U, 182U, 9U, times);
        break;
    case 28L:
        sendNec1(73U, 182U, 5U, times);
        break;
    case 29L:
        sendNec1(73U, 182U, 1U, times);
        break;
    case 30L:
        sendNec1(73U, 182U, 70U, times);
        break;
    case 31L:
        sendNec1(73U, 182U, 24U, times);
        break;
    case 32L:
        sendNec1(73U, 182U, 16U, times);
        break;
    case 33L:
        sendNec1(73U, 182U, 87U, times);
        break;
    case 34L:
        sendNec1(73U, 182U, 79U, times);
        break;
    case 35L:
        sendNec1(73U, 182U, 83U, times);
        break;
    case 36L:
        sendNec1(73U, 182U, 28U, times);
        break;
    case 37L:
        sendNec1(73U, 182U, 29U, times);
        break;
    case 38L:
        sendNec1(73U, 182U, 31U, times);
        break;
    case 39L:
        sendNec1(73U, 182U, 30U, times);
        break;
    case 40L:
        sendNec1(73U, 182U, 75U, times);
        break;
    case 41L:
        sendNec1(73U, 182U, 71U, times);
        break;
    case 42L:
        sendNec1(73U, 182U, 73U, times);
        break;
    case 43L:
        sendNec1(73U, 182U, 69U, times);
        break;
    case 44L:
        sendNec1(73U, 182U, 18U, times);
        break;
    case 45L:
        sendNec1(73U, 182U, 12U, times);
        break;
    case 46L:
        sendNec1(73U, 182U, 68U, times);
        break;
    case 47L:
        sendNec1(73U, 182U, 92U, times);
        break;
    case 48L:
        sendNec1(73U, 182U, 95U, times);
        break;
    case 49L:
        sendNec1(73U, 182U, 25U, times);
        break;
    case 50L:
        sendNec1(73U, 182U, 94U, times);
        break;
    case 51L:
        sendNec1(73U, 182U, 93U, times);
        break;
    case 52L:
        sendNec1(73U, 182U, 19U, times);
        break;
    case 53L:
        sendNec1(73U, 182U, 23U, times);
        break;
    case 54L:
        sendNec1(73U, 182U, 67U, times);
        break;
    case 55L:
        sendNec1(73U, 182U, 65U, times);
        break;
    case 56L:
        sendNec1(73U, 182U, 22U, times);
        break;
    case 57L:
        sendNec1(73U, 182U, 21U, times);
        break;
    default:
        Serial.println(F("Invalid number entered, try again"));
        break;
    }
}
